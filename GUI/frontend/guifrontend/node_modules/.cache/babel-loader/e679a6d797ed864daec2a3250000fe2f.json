{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/akshat/Anveshak/touchpad/frontend/guifrontend/src/Nodes.js\";\n\nasync function addNode(name, scommand, kcommand) {\n  let promise = new Promise(function (resolve, reject) {\n    fetch(\"http://localhost:5000/api/addnode?name=\" + name + \"&scommand=\" + scommand + \"&kcommand=\" + kcommand, res => {\n      if (res.ok) {\n        promise.resolve(true);\n      } else {\n        alert(\"Error in adding node!\");\n        promise.resolve(false);\n      }\n    });\n  });\n  result = await promise;\n  return result;\n}\n\nfunction deleteNode(name) {\n  fetch(\"http://localhost:5000/api/deletenode?name=\" + name, res => {\n    if (res.ok) {} else {\n      alert(\"Error in deleting node!\");\n    }\n  });\n}\n\nfunction startNode() {}\n\nfunction Nodes() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Nodes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this);\n}\n\n_c = Nodes;\nexport default Nodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nodes\");","map":{"version":3,"sources":["/home/akshat/Anveshak/touchpad/frontend/guifrontend/src/Nodes.js"],"names":["addNode","name","scommand","kcommand","promise","Promise","resolve","reject","fetch","res","ok","alert","result","deleteNode","startNode","Nodes"],"mappings":";;;AAEA,eAAeA,OAAf,CAAuBC,IAAvB,EAA4BC,QAA5B,EAAqCC,QAArC,EACA;AACE,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAGlDC,IAAAA,KAAK,CAAC,4CAA0CP,IAA1C,GAA+C,YAA/C,GAA4DC,QAA5D,GAAqE,YAArE,GAAkFC,QAAnF,EAA6FM,GAAD,IAAO;AAEpG,UAAGA,GAAG,CAACC,EAAP,EACA;AACIN,QAAAA,OAAO,CAACE,OAAR,CAAgB,IAAhB;AACH,OAHD,MAII;AAEFK,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACAP,QAAAA,OAAO,CAACE,OAAR,CAAgB,KAAhB;AACD;AAGJ,KAbI,CAAL;AAeD,GAlBa,CAAd;AAoBAM,EAAAA,MAAM,GAAG,MAAMR,OAAf;AACA,SAAOQ,MAAP;AAID;;AACD,SAASC,UAAT,CAAoBZ,IAApB,EACA;AAEEO,EAAAA,KAAK,CAAC,+CAA6CP,IAA9C,EAAoDQ,GAAD,IAAO;AAE7D,QAAGA,GAAG,CAACC,EAAP,EACA,CAEC,CAHD,MAII;AACFC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AAGJ,GAXM,CAAL;AAcD;;AACD,SAASG,SAAT,GACA,CAEC;;AAGD,SAASC,KAAT,GACA;AACE,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;KAHQA,K;AAIT,eAAeA,KAAf","sourcesContent":["\n\nasync function addNode(name,scommand,kcommand)\n{\n  let promise = new Promise(function(resolve, reject) {\n    \n  \n    fetch(\"http://localhost:5000/api/addnode?name=\"+name+\"&scommand=\"+scommand+\"&kcommand=\"+kcommand,(res)=>{\n\n        if(res.ok)\n        {\n            promise.resolve(true) \n        }\n        else{\n         \n          alert(\"Error in adding node!\")\n          promise.resolve(false) \n        }\n\n\n    })\n\n  });\n\n  result = await promise\n  return result\n\n\n\n}\nfunction deleteNode(name)\n{\n\n  fetch(\"http://localhost:5000/api/deletenode?name=\"+name,(res)=>{\n\n    if(res.ok)\n    {\n\n    }\n    else{\n      alert(\"Error in deleting node!\")\n    }\n\n\n})\n\n\n}\nfunction startNode()\n{\n\n}\n\n\nfunction Nodes()\n{\n  return (<div> Nodes</div>);\n}\nexport default Nodes;"]},"metadata":{},"sourceType":"module"}