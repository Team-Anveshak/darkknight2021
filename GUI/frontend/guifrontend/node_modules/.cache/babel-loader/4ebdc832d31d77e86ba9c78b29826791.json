{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/akshat/Anveshak/touchpad/frontend/guifrontend/src/Nodes.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nasync function addNode(name, scommand, kcommand) {\n  let promise = new Promise(function (resolve, reject) {\n    fetch(\"http://localhost:5000/api/addnode?nodename=\" + name + \"&scommand=\" + scommand + \"&kcommand=\" + kcommand, res => {\n      if (res.ok) {\n        resolve(true);\n      } else {\n        alert(\"Error in adding node!\");\n        resolve(false);\n      }\n    });\n  });\n  let result = await promise;\n  return result;\n}\n\nasync function deleteNode(name) {\n  let promise = new Promise(function (resolve, reject) {\n    fetch(\"http://localhost:5000/api/deletenode?nodename=\" + name, res => {\n      if (res.ok) {\n        resolve(true);\n      } else {\n        alert(\"Error in deleting node!\");\n        resolve(false);\n      }\n    });\n  });\n  let result = await promise;\n  return result;\n}\n\nasync function startNode(name) {\n  let promise = new Promise(function (resolve, reject) {\n    fetch(\"http://localhost:5000/api/startnode?nodename=\" + name, res => {\n      if (res.ok) {\n        resolve(true);\n      } else {\n        alert(\"Error in starting node!\");\n        resolve(false);\n      }\n    });\n  });\n  let result = await promise;\n  return result;\n}\n\nasync function fetchNodes() {\n  let promise = new Promise(function (resolve, reject) {\n    fetch(\"http://localhost:5000/api/nodes\").then(res => {\n      if (res.ok) {\n        console.log(\"nodes fetched\");\n        data = res.json().then(result => {\n          resolve(result);\n        });\n      } else {\n        alert(\"Error in adding node!\");\n        resolve([]);\n      }\n    });\n  });\n  let result = await promise;\n  return result;\n}\n\nfunction Nodes() {\n  _s();\n\n  const [nodes, setNodes] = useState([]);\n\n  function fetchNodesUI() {\n    fetchNodes().then(nodes => {\n      setNodes(nodes);\n    });\n  }\n\n  useEffect(() => {\n    fetchNodesUI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" Nodes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NodesView, {\n      nodes: nodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NodeForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Nodes, \"WUrlQwkt2hRsXfXQaHeAmoRH5jU=\");\n\n_c = Nodes;\n\nfunction NodesView(props) {\n  let nodeList = [];\n  props.nodes.forEach(node => {\n    nodeList.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: node[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: node[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: node[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 77\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 104\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Start Command\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Kill Command\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Start Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 67\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Kill Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 104\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), nodeList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = NodesView;\n\nfunction NodeForm(props) {\n  _s2();\n\n  let normalButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      addNodeFromForm();\n    },\n    children: \"Add Node + \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 22\n  }, this);\n\n  let disabledButton = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => {\n      addNodeFromForm();\n    },\n    disabled: true,\n    children: \"Adding...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 24\n  }, this);\n\n  const [button, setButton] = useState(normalButton);\n\n  function addNodeFromForm() {\n    let nodename = document.getElementById(\"NodeName\").value;\n    let scommand = document.getElementById(\"NodeStartCommand\").value;\n    let kcommand = document.getElementById(\"NodeKillCommand\").value;\n    addNode(nodename, scommand, kcommand).then(res => {\n      if (res) {\n        setButton(normalButton);\n        props.rerender();\n      }\n    });\n    setButton(disabledButton);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"NodeName\",\n      placeholder: \"Name of the node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 74\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"NodeStartCommand\",\n      placeholder: \"Command to start the node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 91\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"NodeKillCommand\",\n      placeholder: \"Command to kill the node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 89\n    }, this), button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(NodeForm, \"/+yRqKJ1Teb0Z6zQevqljHfXngY=\");\n\n_c3 = NodeForm;\nexport default Nodes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Nodes\");\n$RefreshReg$(_c2, \"NodesView\");\n$RefreshReg$(_c3, \"NodeForm\");","map":{"version":3,"sources":["/home/akshat/Anveshak/touchpad/frontend/guifrontend/src/Nodes.js"],"names":["useState","useEffect","addNode","name","scommand","kcommand","promise","Promise","resolve","reject","fetch","res","ok","alert","result","deleteNode","startNode","fetchNodes","then","console","log","data","json","Nodes","nodes","setNodes","fetchNodesUI","NodesView","props","nodeList","forEach","node","push","NodeForm","normalButton","addNodeFromForm","disabledButton","button","setButton","nodename","document","getElementById","value","rerender"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\n\nasync function addNode(name,scommand,kcommand)\n{\n  let promise = new Promise(function(resolve, reject) {\n    \n  \n    fetch(\"http://localhost:5000/api/addnode?nodename=\"+name+\"&scommand=\"+scommand+\"&kcommand=\"+kcommand,(res)=>{\n\n        if(res.ok)\n        {\n           resolve(true) \n        }\n        else{\n         \n          alert(\"Error in adding node!\")\n          resolve(false) \n        }\n\n\n    })\n\n  });\n\n  let result = await promise\n  return result\n\n\n\n}\nasync function deleteNode(name)\n{\n\n  let promise = new Promise(function(resolve, reject) {\n    \n  \n    fetch(\"http://localhost:5000/api/deletenode?nodename=\"+name,(res)=>{\n\n        if(res.ok)\n        {\n           resolve(true) \n        }\n        else{\n         \n          alert(\"Error in deleting node!\")\n          resolve(false) \n        }\n\n\n    })\n\n  });\n\n  let  result = await promise\n  return result\n\n\n}\nasync function startNode(name)\n{\n  let promise = new Promise(function(resolve, reject) {\n    \n  \n    fetch(\"http://localhost:5000/api/startnode?nodename=\"+name,(res)=>{\n\n        if(res.ok)\n        {\n            resolve(true) \n        }\n        else{\n         \n          alert(\"Error in starting node!\")\n          resolve(false) \n        }\n\n\n    })\n\n  });\n\n  let result = await promise\n  return result\n\n\n}\nasync function fetchNodes()\n{\n  let promise = new Promise(function(resolve, reject) {\n    \n  \n    fetch(\"http://localhost:5000/api/nodes\").then((res)=>{\n     \n        if(res.ok)\n        {\n            console.log(\"nodes fetched\")\n            data = res.json().then((result)=>{\n                resolve(result)\n            });\n             \n        }\n        else{\n         \n          alert(\"Error in adding node!\")\n          resolve([]) \n        }\n\n\n    })\n\n  });\n\n  let result = await promise\n  return result\n\n}\n\n\n\nfunction Nodes()\n{\n  const [nodes,setNodes] = useState([])\n  function fetchNodesUI()\n  {\n    fetchNodes().then((nodes)=>{\n      \n        setNodes(nodes)\n    });\n  }\n\n  useEffect(()=>{fetchNodesUI()},[]);\n\n\n  return (<div> Nodes\n\n    <br />\n    <NodesView nodes={nodes} />\n    <NodeForm />\n\n\n  </div>);\n}\n\n\n\nfunction NodesView(props)\n{\n  let nodeList = []\n  props.nodes.forEach((node)=>{\n\n    nodeList.push(<tr><td>{node[0]}</td><td>{node[1]}</td><td>{node[2]}</td><td>Start</td><td>Stop</td><td>Status</td></tr>)\n\n  })\n\n  return(\n      <div>\n        <table>\n        <tr>\n          <th>Node</th><th>Start Command</th><th>Kill Command</th><th>Start Node</th><th>Kill Node</th><th>Status</th>\n        </tr>\n        {nodeList}\n        </table>\n \n\n      </div>\n\n\n\n  );\n\n}\n\n\n\n\nfunction NodeForm(props)\n{\n  let normalButton = <button onClick={()=>{addNodeFromForm()}}>Add Node + </button>\n  let disabledButton = <button onClick={()=>{addNodeFromForm()}} disabled>Adding...</button>\n  \n  const [button,setButton] = useState(normalButton)\n  function addNodeFromForm()\n  {\n   \n    let nodename = document.getElementById(\"NodeName\").value;\n    let scommand = document.getElementById(\"NodeStartCommand\").value;\n    let kcommand = document.getElementById(\"NodeKillCommand\").value;\n    addNode(nodename,scommand,kcommand).then((res)=>{\n        if(res)\n        {\n            setButton(normalButton)\n            props.rerender()\n        }\n    });\n    setButton(disabledButton)\n\n\n  }\n \n  return(<div>\n\n\n      <h3>Add a Node</h3>\n\n\n      <input type=\"text\" id=\"NodeName\" placeholder=\"Name of the node\" /> <br />\n      <input type=\"text\" id=\"NodeStartCommand\" placeholder=\"Command to start the node\" /> <br />\n      <input type=\"text\" id=\"NodeKillCommand\" placeholder=\"Command to kill the node\" /> <br />\n    \n      {button}\n      \n      \n\n\n\n  </div>)\n}\nexport default Nodes;"]},"metadata":{},"sourceType":"module"}